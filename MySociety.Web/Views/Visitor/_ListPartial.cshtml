@using MySociety.Entity.ViewModels
@using System.Security.Claims
@using MySociety.Service.Common
@model VisitorPagination

@{
    string? userRole = User.FindFirst(ClaimTypes.Role)?.Value;
    string? hideClass = userRole == "Security" ? "d-none" : "";
}

<!-- Table -->
<div class="table-responsive">
    <table class="table approval-table">
        <thead>
            <tr>
                @if (!User.IsInRole("Owner") && !User.IsInRole("Tenant"))
                {
                    <th scope="col" class="col sortable-column" data-column="house" data-current-order="asc">
                        <span>House No</span>
                        <span class="" data-order="asc">
                            <img src="~/images/icons/arrow-up.svg" alt="">
                        </span>
                        <span class="d-none" data-order="desc">
                            <img src="~/images/icons/arrow-down.svg" alt="">
                        </span>
                    </th>
                }

                <th scope="col" class="col sortable-column" data-column="name" data-current-order="asc">
                    <span>Name</span>
                    <span class="d-none" data-order="asc">
                        <img src="~/images/icons/arrow-up.svg" alt="">
                    </span>
                    <span class="d-none" data-order="desc">
                        <img src="~/images/icons/arrow-down.svg" alt="">
                    </span>
                </th>
                <th scope="col" class="col sortable-column" data-column="phone" data-current-order="desc">
                    <span>Phone</span>
                    <span class="d-none" data-order="asc">
                        <img src="~/images/icons/arrow-up.svg" alt="">
                    </span>
                    <span class="d-none" data-order="desc">
                        <img src="~/images/icons/arrow-down.svg" alt="">
                    </span>
                </th>
                <th scope="col" class="col sortable-column" data-column="purpose" data-current-order="desc">
                    <span>Visit Purpose</span>
                    <span class="d-none" data-order="asc">
                        <img src="~/images/icons/arrow-up.svg" alt="">
                    </span>
                    <span class="d-none" data-order="desc">
                        <img src="~/images/icons/arrow-down.svg" alt="">
                    </span>
                </th>
                <th scope="col" class="col sortable-column" data-column="noofvisitors" data-current-order="desc">
                    <span>No. of Visitors</span>
                    <span class="d-none" data-order="asc">
                        <img src="~/images/icons/arrow-up.svg" alt="">
                    </span>
                    <span class="d-none" data-order="desc">
                        <img src="~/images/icons/arrow-down.svg" alt="">
                    </span>
                </th>
                <th scope="col" class="col sortable-column" data-column="vehicle" data-current-order="desc">
                    <span>Vehicle</span>
                    <span class="d-none" data-order="asc">
                        <img src="~/images/icons/arrow-up.svg" alt="">
                    </span>
                    <span class="d-none" data-order="desc">
                        <img src="~/images/icons/arrow-down.svg" alt="">
                    </span>
                </th>
                <th scope="col" class="col sortable-column" data-column="status" data-current-order="desc">
                    <span>Status</span>
                    <span class="d-none" data-order="asc">
                        <img src="~/images/icons/arrow-up.svg" alt="">
                    </span>
                    <span class="d-none" data-order="desc">
                        <img src="~/images/icons/arrow-down.svg" alt="">
                    </span>
                </th>
                <th scope="col" class="col sortable-column" data-column="checkin" data-current-order="desc">
                    <span>Check In</span>
                    <span class="d-none" data-order="asc">
                        <img src="~/images/icons/arrow-up.svg" alt="">
                    </span>
                    <span class="d-none" data-order="desc">
                        <img src="~/images/icons/arrow-down.svg" alt="">
                    </span>
                </th>
                <th scope="col" class="col sortable-column" data-column="checkout" data-current-order="desc">
                    <span>Check Out</span>
                    <span class="d-none" data-order="asc">
                        <img src="~/images/icons/arrow-up.svg" alt="">
                    </span>
                    <span class="d-none" data-order="desc">
                        <img src="~/images/icons/arrow-down.svg" alt="">
                    </span>
                </th>
                @if (User.IsInRole("Owner") || User.IsInRole("Tenant") || User.IsInRole("Security"))
                {
                    <th scope="col" class="col sortable-column" data-column="checkIn"
                        data-current-order="desc">
                        <span>Waiting Since</span>
                        <span class="d-none" data-order="asc">
                            <img src="~/images/icons/arrow-up.svg" alt="">
                        </span>
                        <span class="d-none" data-order="desc">
                            <img src="~/images/icons/arrow-down.svg" alt="">
                        </span>
                    </th>
                }
                <th scope="col" class="col-1">Action</th>
            </tr>
        </thead>
        <tbody class="table-group-divider">
            @foreach (var visitor in Model.Visitors)
            {
                <tr data-id="@visitor.Id">
                    @if (!User.IsInRole("Owner") && !User.IsInRole("Tenant"))
                    {
                        <td>@visitor.Address.UnitName</td>
                    }
                    <td scope="row">
                        <img src="~/images/profile.png" alt="" width="35px" height="35px" class="rounded-circle">
                        <span>@visitor.Name</span>
                    </td>
                    <td>@visitor.Phone</td>
                    <td>@visitor.VisitPurpose</td>
                    <td>@visitor.NoOfVisitors</td>
                    <td>
                        @(visitor.VehicleNumber ?? "N/A")
                    </td>
                    <td>@visitor.ApprovalStatus</td>
                    <td>
                        @(visitor.CheckIn == null ? "-" : visitor.CheckIn)
                    </td>
                    <td>
                        @(visitor.CheckOut == null ? "-" : visitor.CheckOut)
                    </td>
                    
                    @if (User.IsInRole("Owner") || User.IsInRole("Tenant") || User.IsInRole("Security"))
                    {
                        @if (visitor.ApprovalStatus == "Pending")                                       //Waiting Time
                        {
                            <td class="waiting-time"
                                data-time="@visitor.CreatedAt.ToString("yyyy-MM-ddTHH:mm:ss")"></td>
                        }
                        else
                        {
                            <td>-</td>
                        }
                    }

                    <td class="d-flex gap-2">
                        <a asp-action="Get" asp-controller="Visitor" asp-route-id="@visitor.Id" type="button"
                            class="px-3 btn btn-view">
                            View
                        </a>

                        <span>@visitor.ApprovalStatus</span>

                        @if (User.IsInRole("Security") && visitor.ApprovalStatus == "Pending")
                        {
                            <a asp-action="Save" asp-controller="Visitor" asp-route-id="@visitor.Id" class="px-3 btn btn-edit">
                                Edit
                            </a>
                        }

                        @if (User.IsInRole("Owner") || User.IsInRole("Tenant") || User.IsInRole("Security"))
                        {
                            @if (visitor.ApprovalStatus == "Pending")                                       //Action
                            {
                                @if(userRole == visitor.ResidentRole || userRole == RoleType.Security.ToString())
                                {
                                    <button type="button" class="px-3 btn btn-approve" onclick="approveModal(this)"
                                        data-name="@visitor.Name" data-id=@visitor.Id>
                                        Approve
                                    </button>

                                    <button type="button" class="px-3 btn btn-reject" onclick="rejectModal(this)"
                                        data-name="@visitor.Name" data-id=@visitor.Id>
                                        Reject
                                    </button>
                                }
                            }
                            else if (visitor.ApprovalStatus == "Approved" && visitor.CheckIn != null && visitor.CheckOut == null &&
                            User.IsInRole("Security"))
                            {
                                <button type="button" class="px-3 btn btn-checkOut" onclick="checkOutModal(this)"
                                    data-id=@visitor.Id data-name="@visitor.Name">
                                    Check Out
                                </button>
                            }
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (Model.Visitors.Count > 0)
{
    <!-- Pagination Starts -->
    <div class="d-flex justify-content-end gap-1 flex-column flex-md-row pb-2">
        <div class="d-flex flex-row justify-content-end align-items-center mb-1 me-1 gap-1">
            <span>Items per page:</span>
            <select class="form-select w-auto" onchange="paginationAjax(1)" id="itemsPerPage"
                aria-label="Select items per page">
                <option value="5" selected="@(Model.Page.PageSize == 5 ? true : false)">5</option>
                <option value="10" selected="@(Model.Page.PageSize == 10 ? true : false)">10</option>
                <option value="15" selected="@(Model.Page.PageSize == 15 ? true : false)">15</option>
            </select>
        </div>

        <div class="d-flex flex-row justify-content-end align-items-center mb-1 gap-1">
            <span>Showing @Model.Page.FromRec - @Model.Page.ToRec of @Model.Page.TotalRecord</span>

            <!-- Previous Page Button -->
            <button class="btn bg-white border btn-prev @(Model.Page.CurrentPage > 1 ? "" : "disabled")"
                onclick="paginationAjax(@Model.Page.CurrentPage - 1)">
                <img src="~/images/icons/chevron-left.svg" alt="">
            </button>

            <!-- Next Page Button -->
            <button class="btn bg-white border btn-next @(Model.Page.CurrentPage < Model.Page.TotalPages ? "" : "disabled")"
                onclick="paginationAjax(@Model.Page.CurrentPage + 1)">
                <img src="~/images/icons/chevron-right.svg" alt="">
            </button>
        </div>
    </div>
    <!-- Pagination Ends -->
}
else
{
    <div class="text-center fs-5">No Record Found</div>
}